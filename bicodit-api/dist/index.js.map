{"version":3,"sources":["../src/index.js"],"names":["LocalStrategy","require","Strategy","app","server","http","createServer","use","bodyParser","json","limit","config","bodyLimit","passport","initialize","Account","usernameField","passwordField","authenticate","serializeUser","deserializeUser","routes","get","req","res","message","listen","port","console","log","address","module","exports"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AAOA;;AACA;;;;AAPA;AACA;AACA;AAEA,IAAMA,aAAa,GAAIC,OAAO,CAAC,gBAAD,CAAP,CAA0BC,QAAjD;;AAKA,IAAIC,GAAG,GAAG,0BAAV;AACAA,GAAG,CAACC,MAAJ,GAAaC,iBAAKC,YAAL,CAAkBH,GAAlB,CAAb,C,CACA;AAEA;AACA;;AACAA,GAAG,CAACI,GAAJ,CAAQC,uBAAWC,IAAX,CAAgB;AACtBC,EAAAA,KAAK,EAAEC,mBAAOC;AADQ,CAAhB,CAAR,E,CAIA;;AACAT,GAAG,CAACI,GAAJ,CAAQM,qBAASC,UAAT,EAAR;;AACA,IAAIC,OAAO,GAAGd,OAAO,CAAC,kBAAD,CAArB;;AACAY,qBAASN,GAAT,CAAa,IAAIP,aAAJ,CAAkB;AAC7BgB,EAAAA,aAAa,EAAE,OADc;AAE7BC,EAAAA,aAAa,EAAE;AAFc,CAAlB,EAIXF,OAAO,CAACG,YAAR,EAJW,CAAb;;AAMAL,qBAASM,aAAT,CAAuBJ,OAAO,CAACI,aAAR,EAAvB;;AACAN,qBAASO,eAAT,CAAyBL,OAAO,CAACK,eAAR,EAAzB;;AAEAjB,GAAG,CAACI,GAAJ,CAAQ,aAAR,EAAuBc,kBAAvB,E,CAEA;;AACAlB,GAAG,CAACmB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzBA,EAAAA,GAAG,CAACf,IAAJ,CAAS;AAAEgB,IAAAA,OAAO,EAAE;AAAX,GAAT;AACD,CAFD;AAIAtB,GAAG,CAACC,MAAJ,CAAWsB,MAAX,CAAkBf,mBAAOgB,IAAzB;AACAC,OAAO,CAACC,GAAR,2BAA+B1B,GAAG,CAACC,MAAJ,CAAW0B,OAAX,GAAqBH,IAApD;AAEAI,MAAM,CAACC,OAAP,GAAiB;AACf7B,EAAAA,GAAG,EAAHA;AADe,CAAjB","sourcesContent":["import http from 'http';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\n// import socket from 'socket.io';\n// import Message from './model/message';\n// import Channel from './model/channel';\n\nconst LocalStrategy  = require('passport-local').Strategy;\n\nimport config from './config';\nimport routes from './routes';\n\nlet app = express();\napp.server = http.createServer(app);\n// let io = socket(app.server);\n\n//middleware\n//parse application/json\napp.use(bodyParser.json({\n  limit: config.bodyLimit\n}));\n\n//passport config\napp.use(passport.initialize());\nlet Account = require('./models/account');\npassport.use(new LocalStrategy({\n  usernameField: 'login',\n  passwordField: 'password'\n},\n  Account.authenticate()\n));\npassport.serializeUser(Account.serializeUser());\npassport.deserializeUser(Account.deserializeUser());\n\napp.use('/bicoditapi', routes);\n\n// Base URL test endpoint to see if API is running\napp.get('/', (req, res) => {\n  res.json({ message: 'Bicodit API is ALIVE!' })\n});\n\napp.server.listen(config.port);\nconsole.log(`Started on port ${app.server.address().port}`);\n\nmodule.exports = {\n  app\n}\n"],"file":"index.js"}
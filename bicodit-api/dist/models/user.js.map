{"version":3,"sources":["../../src/models/user.js"],"names":["Schema","mongoose","userSchema","account","type","Types","ObjectId","ref","name","String","about","module","exports","model"],"mappings":";;AAAA;;AACA;;;;;;AACA,IAAMA,MAAM,GAAGC,qBAASD,MAAxB;AAEA,IAAME,UAAU,GAAG,IAAIF,MAAJ;AACfG,EAAAA,OAAO,EAAE;AACLC,IAAAA,IAAI,EAAEH,qBAASD,MAAT,CAAgBK,KAAhB,CAAsBC,QADvB;AACiCC,IAAAA,GAAG,EAAE;AADtC,GADM;AAIfC,EAAAA,IAAI,EAAEC,MAJS;AAID,aAAS,EAJR;AAKfC,EAAAA,KAAK,EAAED;AALQ,cAKS,EALT,EAAnB,C,CAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAE,MAAM,CAACC,OAAP,GAAiBX,qBAASY,KAAT,CAAe,MAAf,EAAuBX,UAAvB,CAAjB","sourcesContent":["import mongoose from 'mongoose';\nimport validator from '../utils/helper';\nconst Schema = mongoose.Schema;\n\nconst userSchema = new Schema({\n    account: {\n        type: mongoose.Schema.Types.ObjectId, ref: 'Account'\n    },\n    name: String, default: \"\",\n    about: String, default: \"\"\n});\n\n// userSchema.pre('save', true, function(next, done) {\n//     var self = this\n//     if (self.username.length > 0) {\n//         const validateNameMsg = validator.username(self.username)\n//         if (validateNameMsg) {\n//             self.invalidate('name', validateNameMsg)\n//             next(new Error(validateNameMsg))\n//         }\n//     }\n//     if (self.about.length > 0) {\n//         const validateAboutMsg = validator.about(self.about)\n//         if (validateAboutMsg) {\n//             self.invalidate('about', validateAboutMsg)\n//             next(new Error(validateAboutMsg))\n//         }\n//     }\n//     next()\n// })\n\nmodule.exports = mongoose.model('User', userSchema);"],"file":"user.js"}
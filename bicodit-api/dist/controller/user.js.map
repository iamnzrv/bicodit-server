{"version":3,"sources":["../../src/controller/user.js"],"names":["upload","dest","path","join","__dirname","config","db","api","get","req","res","sendfile","authenticate","User","find","err","users","status","json","message","post","single","tempPath","file","extname","originalname","toLowerCase","targetPath","targetFolder","slice","indexOf","user","id","fs","existsSync","resultPath","rename","sharp","cache","resize","jpeg","quality","toBuffer","buffer","writeFile","e","unlink","findById","params","defaultFolder","readFile","userAvatar","defaultAvatar","end","put","account","name","body","about","save","findOne","headers","populate","exec","userData","login","username","email"],"mappings":"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","sourcesContent":["import mongoose from 'mongoose';\nimport multer from 'multer';\nimport fs from 'fs';\nimport sharp from 'sharp';\nimport mkdirp from 'mkdirp';\nimport path from 'path';\nimport { Router } from 'express';\nimport bodyParser from 'body-parser';\nimport User from '../models/user';\n\nimport { authenticate } from '../middleware/auth_middleware';\n\nconst upload = multer({\n  dest: path.join(__dirname, `./temporary/avatars/`)\n});\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  api.get('/test', function(req, res) {\n    res.sendfile('index.html');\n  })\n\n  // '/bicoditapi/user/' - Read\n  api.get('/', authenticate, (req, res) => {\n    User.find({}, (err, users) => {\n      if (err) {\n        res.status(500).json({ message: err });\n      }\n      res.status(200).json(users);\n    });\n  });\n  \n  //'/bicoditapi/upload/avatar' - Upload avatar\n  api.post('/upload/avatar', upload.single(\"avatar\"), authenticate, (req, res) => {\n    const tempPath = req.file.path;\n    const extname = path.extname(req.file.originalname).toLowerCase();\n    let targetPath;\n    const targetFolder = path.join(__dirname.slice(0, __dirname.indexOf(\"/dist\")), `res/uploads/${req.user.id}`);\n    if (extname === \".png\" || extname === \".jpg\") {\n      if (!fs.existsSync(targetFolder)) {\n        mkdirp(targetFolder, function (err) {\n          if (err) return res.status(500).json({ message: \"Failed to upload the image\" });\n      });\n    }\n      targetPath = `${targetFolder}/rawavatar${extname}`;\n      const resultPath = `${targetFolder}/avatar.jpg`;\n      fs.rename(tempPath, targetPath, err => {\n        if (err) return res.status(500).json({ message: \"Failed to upload the image\" });\n        sharp.cache(false);\n        sharp(targetPath)\n        .resize(1000)\n        .jpeg({quality: 80})\n        .toBuffer(function(err, buffer) {\n          if (err) {\n            return res.status(500).json({ message: \"Failed to upload the image\" });\n          }\n          fs.writeFile(resultPath, buffer, function(e) {\n            if (e) {\n              return res.status(500).json({ message: \"Failed to upload the image\" });\n            }\n            fs.unlink(targetPath, err => {\n              if (err) return res.status(500).json({ message: \"Failed to upload the image\" });\n              res.status(200).json({ message: \"Avatar successfully uploaded\" })\n            });\n          });\n      });\n      });\n    }\n    else {\n      fs.unlink(tempPath, err => {\n        if (err) return res.status(500).json({ message: \"Failed to upload the image\" });\n        res.status(403).json({ message: \"Image format is not allowed\" })\n      });\n    }\n  })\n\n  //'/bicoditapi/avatar/:id' - Get avatar by user id\n  api.get('/avatar/:id', authenticate, (req, res) => {\n    User.findById(req.params.id, (err, user) => {\n      if (err) {\n        return res.status(500).json({ message: err });\n      }\n      else if (!user) {\n        return res.status(404).json({ message: \"User not found\" });\n      }\n      else {\n        const targetFolder = path.join(__dirname.slice(0, __dirname.indexOf(\"/dist\")), `res/uploads/${user.id}`)\n        const defaultFolder = path.join(__dirname.slice(0, __dirname.indexOf(\"/dist\")), `res/default`)\n        fs.readFile(`${targetFolder}/avatar.jpg`, (err, userAvatar) => {\n          if (err) {\n            fs.readFile(`${defaultFolder}/avatar.jpg`, (err, defaultAvatar) => {\n              if (err) {\n                res.status(500).json({ message: \"Could not get default avatar\" });\n              }\n              res.status(200).end(defaultAvatar);\n            })\n          }\n          res.status(200).end(userAvatar);\n        })\n      }\n    });\n  })\n\n  // '/bicoditapi/user/:id' - Update\n  api.put('/:id', authenticate, (req, res) => {\n    User.findById(req.params.id, (err, user) => {\n      if (err) {\n        return res.status(500).json({ message: err });\n      }\n      else if (!user) {\n        return res.status(404).json({ message: \"User not found\" });\n      }\n      else if (req.user.id == user.account) {\n        user.name = req.body.name;\n        user.about = req.body.about;\n        user.save(err => {\n          if (err) {\n            res.status(500).json({ message: err });\n          }\n          res.status(200).json({ message: 'User info updated' });\n        });\n      }\n      else {\n        res.status(406).json({ message: 'You provided invalid id for profile changes, please try again' })\n      }\n    });\n  });\n\n    // 'bicoditapi/user/byaccount' - Get user by account id\n    api.get('/byaccount', authenticate, (req, res) => {\n        User\n          .findOne({ 'account': req.headers.id })\n          .populate('account')\n          .exec((err, userData) => {\n            if (err) {\n              return res.status(500).json({ message: err });\n            }\n            else if (!userData) {\n              return res.status(404).json({ message: \"User not found\" });\n            }\n            res.status(200).json({\n              id: userData.id,\n              login: userData.account.username,\n              email: userData.account.email,\n              name: userData.name,\n              about: userData.about\n          });\n          });\n      });\n\n    return api;\n}"],"file":"user.js"}
{"version":3,"sources":["../../src/controller/rating.js"],"names":["config","db","api","post","req","res","next","UserDataExt","findUserByToken","headers","token","err","user","status","send","newRating","Rating","userId","id","userLogin","username","userAvatar","avatar","text","body","value","ratingValue","createdTime","Date","save","rating","respondWithRating","get","RatingDataExt","findRatingsByToken","ratings","map","respondWithRatings"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AAEA;;;;eAEe,wBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;AACjC,MAAIC,GAAG,GAAG,sBAAV,CADiC,CAGjC;;AACAA,EAAAA,GAAG,CAACC,IAAJ,CAAS,MAAT,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACnCC,8BAAYC,eAAZ,CAA4BJ,GAAG,CAACK,OAAJ,CAAYC,KAAxC,EAA+C,UAACC,GAAD,EAAMC,IAAN,EAAe;AAC5D,UAAID,GAAJ,EAAS;AACPN,QAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;AACD,OAFD,MAEO,IAAIF,IAAI,IAAI,IAAZ,EAAkB;AACvBP,QAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;AACD,OAFM,MAEA;AACL,YAAMC,SAAS,GAAG,IAAIC,kBAAJ,CAAW;AAC3BC,UAAAA,MAAM,EAAEL,IAAI,CAACM,EADc;AAE3BC,UAAAA,SAAS,EAAEP,IAAI,CAACQ,QAFW;AAG3BC,UAAAA,UAAU,EAAET,IAAI,CAACU,MAAL,IAAe,cAHA;AAI3BC,UAAAA,IAAI,EAAEnB,GAAG,CAACoB,IAAJ,CAASD,IAAT,IAAiB,EAJI;AAK3BE,UAAAA,KAAK,EAAErB,GAAG,CAACoB,IAAJ,CAASE,WALW;AAM3BC,UAAAA,WAAW,EAAE,IAAIC,IAAJ;AANc,SAAX,CAAlB;AAQAb,QAAAA,SAAS,CAACc,IAAV;AACAzB,QAAAA,GAAG,CAAC0B,MAAJ,GAAaf,SAAb;AACAT,QAAAA,IAAI;AACL;AACF,KAlBD;AAmBD,GApBD,EAoBGyB,oCApBH,EAJiC,CA0BjC;;AACA7B,EAAAA,GAAG,CAAC8B,GAAJ,CAAQ,SAAR,EAAmB,UAAC5B,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AACrC2B,gCAAcC,kBAAd,CAAiC9B,GAAG,CAACK,OAAJ,CAAYC,KAA7C,EAAoD,UAACC,GAAD,EAAMwB,OAAN,EAAkB;AACpE,UAAIxB,GAAJ,EAAS;AACPN,QAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;AACD,OAFD,MAEO,IAAIqB,OAAO,IAAI,IAAf,EAAqB;AAC1B9B,QAAAA,GAAG,CAACQ,MAAJ,CAAW,GAAX,EAAgBC,IAAhB;AACD,OAFM,MAEA;AACLV,QAAAA,GAAG,CAAC+B,OAAJ,GAAcA,OAAO,CAACC,GAAR,CAAY,UAAAN,MAAM,EAAI;AAClC,iBAAO;AACLZ,YAAAA,EAAE,EAAEY,MAAM,CAACZ,EADN;AAELD,YAAAA,MAAM,EAAEa,MAAM,CAACb,MAFV;AAGLE,YAAAA,SAAS,EAAEW,MAAM,CAACX,SAHb;AAILG,YAAAA,MAAM,EAAEQ,MAAM,CAACT,UAJV;AAKLE,YAAAA,IAAI,EAAEO,MAAM,CAACP,IALR;AAMLE,YAAAA,KAAK,EAAEK,MAAM,CAACL,KANT;AAOLE,YAAAA,WAAW,EAAEG,MAAM,CAACH;AAPf,WAAP;AASD,SAVa,CAAd;AAWArB,QAAAA,IAAI;AACL;AACF,KAnBD;AAoBD,GArBD,EAqBG+B,qCArBH;AAuBA,SAAOnC,GAAP;AACD,C","sourcesContent":["import { Router } from 'express';\n\nimport { respondWithRatings, respondWithRating } from '../middleware/rating_middleware';\nimport RatingDataExt from './extensions/rating_data_ext';\nimport UserDataExt from './extensions/user_data_ext';\n\nimport Rating from '../models/rating';\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // '/bicoditapi/rating/add'\n  api.post('/add', (req, res, next) => {\n    UserDataExt.findUserByToken(req.headers.token, (err, user) => {\n      if (err) {\n        res.status(400).send();\n      } else if (user == null) {\n        res.status(404).send();\n      } else {\n        const newRating = new Rating({\n          userId: user.id,\n          userLogin: user.username,\n          userAvatar: user.avatar || \"rabbodefault\",\n          text: req.body.text || \"\",\n          value: req.body.ratingValue,\n          createdTime: new Date()\n        });\n        newRating.save();\n        req.rating = newRating;\n        next();\n      }\n    })\n  }, respondWithRating);\n\n  // '/bicoditapi/rating/getall'\n  api.get('/getall', (req, res, next) => {\n    RatingDataExt.findRatingsByToken(req.headers.token, (err, ratings) => {\n      if (err) {\n        res.status(400).send();\n      } else if (ratings == null) {\n        res.status(404).send();\n      } else {\n        req.ratings = ratings.map(rating => {\n          return {\n            id: rating.id,\n            userId: rating.userId,\n            userLogin: rating.userLogin,\n            avatar: rating.userAvatar,\n            text: rating.text,\n            value: rating.value,\n            createdTime: rating.createdTime\n          }\n        });\n        next();\n      }\n    })\n  }, respondWithRatings);\n\n  return api;\n}"],"file":"rating.js"}
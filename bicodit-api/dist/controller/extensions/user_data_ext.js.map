{"version":3,"sources":["../../../src/controller/extensions/user_data_ext.js"],"names":["UserDataExt","token","callback","id","UserData","findById","populate","exec","err","userData","email","findOne","login"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;;;IAEMA,W;;;;;;;;;oCAEmBC,K,EAAOC,Q,EAAU;AACtC,UAAID,KAAJ,EAAW;AACT,YAAME,EAAE,GAAG,2BAAUF,KAAV,EAAiBE,EAA5B;;AACAC,4BACCC,QADD,CACUF,EADV,EAECG,QAFD,CAEU,SAFV,EAGCC,IAHD,CAIE,UAACC,GAAD,EAAMC,QAAN,EAAmB;AACjB,cAAID,GAAJ,EAAS;AACP,mBAAON,QAAQ,CAACM,GAAD,EAAM,IAAN,CAAf;AACD,WAFD,MAEO;AACL,mBAAON,QAAQ,CAAC,IAAD,EAAOO,QAAP,CAAf;AACD;AACF,SAVH;AAYD,OAdD,MAcO;AACL,eAAOP,QAAQ,CAAC,uBAAD,EAA0B,IAA1B,CAAf;AACD;AACF;;;oCAEsBQ,K,EAAOR,Q,EAAU;AACtCE,0BACCO,OADD,CACS;AAAE,iBAASD;AAAX,OADT,EAECJ,QAFD,CAEU,SAFV,EAGCC,IAHD,CAIE,UAACC,GAAD,EAAMC,QAAN,EAAmB;AACjB,YAAID,GAAJ,EAAS;AACP,iBAAON,QAAQ,CAACM,GAAD,EAAM,IAAN,CAAf;AACD,SAFD,MAEO;AACL,iBAAON,QAAQ,CAAC,IAAD,EAAOO,QAAP,CAAf;AACD;AACF,OAVH;AAYD;;;oCAEsBG,K,EAAOV,Q,EAAU;AACtCE,0BACCO,OADD,CACS;AAAE,oBAAYC;AAAd,OADT,EAECN,QAFD,CAEU,SAFV,EAGCC,IAHD,CAIE,UAACC,GAAD,EAAMC,QAAN,EAAmB;AACjB,YAAID,GAAJ,EAAS;AACP,iBAAON,QAAQ,CAACM,GAAD,EAAM,IAAN,CAAf;AACD,SAFD,MAEO;AACL,iBAAON,QAAQ,CAAC,IAAD,EAAOO,QAAP,CAAf;AACD;AACF,OAVH;AAYD;;;;;;eAGYT,W","sourcesContent":["import mongoose from 'mongoose';\nimport jwtDecode from 'jwt-decode';\nimport UserData from '../../models/account';\n\nclass UserDataExt {\n\n  static findUserByToken(token, callback) {\n    if (token) {\n      const id = jwtDecode(token).id;\n      UserData\n      .findById(id)\n      .populate('account')\n      .exec(\n        (err, userData) => {\n          if (err) {\n            return callback(err, null);\n          } else {\n            return callback(null, userData);\n          }\n        }\n      )\n    } else {\n      return callback(\"No token was provided\", null);\n    }\n  }\n\n  static findUserByEmail(email, callback) {\n    UserData\n    .findOne({ 'email': email })\n    .populate('account')\n    .exec(\n      (err, userData) => {\n        if (err) {\n          return callback(err, null);\n        } else {\n          return callback(null, userData);\n        }\n      }\n    )\n  }\n\n  static findUserByLogin(login, callback) {\n    UserData\n    .findOne({ 'username': login })\n    .populate('account')\n    .exec(\n      (err, userData) => {\n        if (err) {\n          return callback(err, null);\n        } else {\n          return callback(null, userData);\n        }\n      }\n    )\n  }\n}\n\nexport default UserDataExt;\n"],"file":"user_data_ext.js"}